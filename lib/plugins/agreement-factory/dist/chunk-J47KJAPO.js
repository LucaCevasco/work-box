"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunk6YQ64K4Ajs = require('./chunk-6YQ64K4A.js');var _chunkO6Q2TTLBjs = require('./chunk-O6Q2TTLB.js');var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _walletevm = require('@goat-sdk/wallet-evm');function d(m,e,o,t){var n=arguments.length,s=n<3?e:t===null?t=Object.getOwnPropertyDescriptor(e,o):t,g;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")s=Reflect.decorate(m,e,o,t);else for(var f=m.length-1;f>=0;f--)(g=m[f])&&(s=(n<3?g(s):n>3?g(e,o,s):g(e,o))||s);return n>3&&s&&Object.defineProperty(e,o,s),s}_chunkEI7MMDWYjs.a.call(void 0, d,"_ts_decorate");function r(m,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(m,e)}_chunkEI7MMDWYjs.a.call(void 0, r,"_ts_metadata");var a=class{static{_chunkEI7MMDWYjs.a.call(void 0, this,"ServiceAgreementService")}constructor(){}async createAgreement(e,o){try{return{transactionHash:(await o.sendTransaction({to:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"createAgreement",args:[e.serviceProvider,e.termsHash,e.milestoneDescriptions,e.milestoneAmounts.map(n=>BigInt(n)),e.milestoneDealines.map(n=>BigInt(n))],value:BigInt(e.value)})).hash,message:"Agreement creation transaction sent successfully"}}catch(t){throw console.error(t),Error(`Failed to create Agreement: ${t}`)}}async completeBatchMilestones(e,o){try{return{transactionHash:(await o.sendTransaction({to:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"completeBatchMilestones",args:[BigInt(e.agreementId),e.milestoneIndices]})).hash,message:"Batch milestone completion transaction sent successfully"}}catch(t){throw Error(`Failed to complete batch milestones: ${t}`)}}async initiateDispute(e,o){try{return{transactionHash:(await o.sendTransaction({to:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"initiateDispute",args:[BigInt(e.agreementId)]})).hash,message:"Dispute initiation transaction sent successfully"}}catch(t){throw Error(`Failed to initiate dispute: ${t}`)}}async getAgreement(e,o){try{let n=(await o.read({address:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"getAgreement",args:[BigInt(e.agreementId)]})).value;return{client:n[0],serviceProvider:n[1],totalAmount:n[2].toString(),status:["Created","Ongoing","Completed","Disputed","Cancelled"][Number(n[3])],termsHash:n[4],completedMilestones:n[5].toString(),createdAt:n[6].toString()}}catch(t){throw Error(`Failed to get agreement: ${t}`)}}async getMilestone(e,o){try{let n=(await o.read({address:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"getMilestone",args:[BigInt(e.agreementId),BigInt(e.milestoneIndex)]})).value;return{description:n[0],amount:n[1].toString(),completed:n[2],deadline:n[3].toString()}}catch(t){throw Error(`Failed to get milestone: ${t}`)}}async getNextAgreementId(e,o){try{return{nextAgreementId:(await o.read({address:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"nextAgreementId"})).value.toString()}}catch(t){throw Error(`Failed to get next agreement ID: ${t}`)}}async getAgreementStatus(e,o){try{let n=(await o.read({address:e.contractAddress,abi:_chunkO6Q2TTLBjs.a,functionName:"getAgreement",args:[BigInt(e.agreementId)]})).value,s={0:"Created",1:"Ongoing",2:"Completed",3:"Disputed",4:"Cancelled"};return{agreementId:e.agreementId,status:s[n[3]],statusCode:n[3]}}catch(t){throw Error(`Failed to get agreement status: ${t}`)}}};d([_core.Tool.call(void 0, {description:"Create a new service agreement with milestones"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.d>"u"?Object:_chunk6YQ64K4Ajs.d,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"createAgreement",null);d([_core.Tool.call(void 0, {description:"Complete multiple milestones at once for a service agreement"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.e>"u"?Object:_chunk6YQ64K4Ajs.e,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"completeBatchMilestones",null);d([_core.Tool.call(void 0, {description:"Initiate a dispute for an agreement"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.f>"u"?Object:_chunk6YQ64K4Ajs.f,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"initiateDispute",null);d([_core.Tool.call(void 0, {description:"Get detailed information about an agreement"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.g>"u"?Object:_chunk6YQ64K4Ajs.g,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"getAgreement",null);d([_core.Tool.call(void 0, {description:"Get detailed information about a specific milestone"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.h>"u"?Object:_chunk6YQ64K4Ajs.h,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"getMilestone",null);d([_core.Tool.call(void 0, {description:"Get the next agreement ID that will be used for the next created agreement"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.i>"u"?Object:_chunk6YQ64K4Ajs.i,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"getNextAgreementId",null);d([_core.Tool.call(void 0, {description:"Get the status of an agreement"}),r("design:type",Function),r("design:paramtypes",[typeof _chunk6YQ64K4Ajs.g>"u"?Object:_chunk6YQ64K4Ajs.g,typeof _walletevm.EVMWalletClient>"u"?Object:_walletevm.EVMWalletClient]),r("design:returntype",Promise)],a.prototype,"getAgreementStatus",null);exports.a = a;
